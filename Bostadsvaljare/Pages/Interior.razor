@page "/interior"

@inject IJSRuntime JSRuntime

@using BlazorStrap
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons


<div id="slideshow">
    <BSCarousel NumberOfItems="@items.Count">
        <BSCarouselIndicators NumberOfItems="@items.Count"></BSCarouselIndicators>
        <div class="carousel-inner">
            @for (int i = 0; i < items.Count; i++)
            {
                <BSCarouselItem src="@items[i].Source" alt="@items[i].Alt" />
            }
        </div>
        <BSCarouselControl CarouselDirection="CarouselDirection.Previous" NumberOfItems="@items.Count"></BSCarouselControl>
        <BSCarouselControl CarouselDirection="CarouselDirection.Next" NumberOfItems="@items.Count"></BSCarouselControl>
    </BSCarousel>
</div>

<div id="housing_info">
    @*TODO: have an own block that contains relevant info regarding the selected housing*@
    <BSCard CardType="CardType.Card" Class="card-inner">
        <BSCard CardType="CardType.Image" src="IMG/FramsidaExt.jpg" alt="Housing image" />
        <BSImage id="hide_info" src="IMG/icons/info.png" Class="icon" @onclick="ToggleInfo" />
        @*<SfButton id="hide_info" CssClass="e-round" IconCss="icon e-icons e-info-icon" />*@

        <BSCard CardType="CardType.Body">
            <header class="card-info-header"> Ariktekten har ordet</header>
            <header class="card-info-text"> @house1.Comments</header>

            <div>
                <hr />
                <header class="card-info-header">Lägenhet nr. </header>
                <header class="card-info-header-right">@house1.HouseNumber</header>
            </div>

            <div>
                <hr />
                <header class="card-info-header">Pris </header>
                <header class="card-info-header-right">@house1.Price</header>
            </div>

            <div>
                <hr />
                <header class="card-info-header">Storlek</header>
                <header class="card-info-header-right">@house1.Sqm</header>
            </div>
        </BSCard>
    </BSCard>
</div>

<div id="gallery">
    @*TODO: ensure the images below reflect to what is shown in the slideshow*@
    @*TODO: enable scrolling if too many images are present to fit the window*@
    <BSImage src="IMG/Imagemapbild.jpg" Class="gallery-img"></BSImage>
    <BSImage src="IMG/PhysCam006.jpg" Class="gallery-img"></BSImage>
    <BSImage src="IMG/Imagemapbild.jpg" Class="gallery-img"></BSImage>
    <BSImage src="IMG/PhysCam006.jpg" Class="gallery-img"></BSImage>
</div>

@*<SfGrid DataSource="@Orders" AllowFiltering="true" AllowPaging="true">
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
    </GridColumns>
</SfGrid>*@


@code {
    public class Houses

    {
        public double Sqm { get; set; }
        public string Price { get; set; }
        public double LandArea { get; set; }
        public string HouseNumber { get; set; }
        public string Status { get; set; }
        public string Comments { get; set; }


    }

    Houses house1 = new Houses
    {
        Sqm = 152,
        Price = "5 000 000",
        LandArea = 380,
        HouseNumber = "7a",
        Status = "Ledig",
        Comments = "Med sin kubistiska utformning och minimalistiska formspråk sticker lägenheten ut från mängden. Här är det de anspråkslösa detaljerna som väcker intresset. Det stilrent takade entrépartiet följs upp invändigt av ett effektfullt ljusschakt med full takhöjd genom båda våningsplanen och ett högt glasparti."
    };


    IList< Item> items = new List<Item> {
        new Item {
            Source = "IMG/imagemapbild.jpg",
            Alt ="First Slide",
            Caption = "Slide 1",
            Header = "Slide 1 Header",
            ActionLink = "https://visivo.se",
            ActionLinkTarget = "_blank"
        },
        new Item {
            Source = "IMG/PhysCam006.jpg",
            Alt ="Second Slide",
            Caption = "Slide 2",
            Header = "Slide 2 Header",
            ActionLink = "https://visivo.se",
            ActionLinkTarget = "_blank"
        },
        new Item {
            Source = "IMG/imagemapbild.jpg",
            Alt ="Third Slide",
            Caption = "Slide 3",
            Header = "Slide 3 Header",
            ActionLink = "https://visivo.se",
            ActionLinkTarget = "_blank"
        }
    };

    class Item
    {
        public string Source { get; set; }
        public string Alt { get; set; }
        public string Caption { get; set; }
        public string Header { get; set; }
        public string ActionLink { get; set; }
        public string ActionLinkTarget { get; set; }
    }


    public List<Order> Orders { get; set; }
    private bool ShowInfo { get; set; } = true;

    public void ToggleInfo()
    {

    }

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order() {
            OrderID = 1000 + x,
            CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
            Freight = 2.1 * x,
            OrderDate = (new DateTime[] { new DateTime(2010, 5, 1), new DateTime(2010, 5, 2), new DateTime(2010, 5, 3), })[new Random().Next(3)],
        }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
    }
}

<style>
    #slideshow {
        float: left;
        width: 62%;
        margin-bottom: 10px;
        margin-right: 5px;
    }

    #housing_info {
        float: right;
        width: 37%;
        margin-bottom: 5px;
        font-family: 'Futura PT';
    }

    #gallery {
        clear: both;
        display: inline-block;
    }

    #hide_info {
        position: absolute;
        top: 0px;
        right: 0px;
        transition-duration: 0.4s;
    }

    #hide_info:hover {
        width: 50px;
    }

    .gallery-img {
        width: 22%;
        margin-right: 10px;
    }

    .gallery-img:hover {
        filter: brightness(110%);
    }

    .card-info-header {
        font-family: 'Futura PT';
        font-size: 50px;
        display: inline;
    }

    .card-info-text {
        font-family: 'Futura PT';
        font-size: 22px;
        margin-bottom: 20px;
    }

    .card-info-header-right {
        font-family: 'Futura PT';
        font-size: 50px;
        display: inline;
        float:right
    }

    .list1 {
        list-style-type:none;
    }

    e-info-icon::before {
        content: url(icons/info.png);
    }

    .icon {
        width: 32px;
    }
</style>
